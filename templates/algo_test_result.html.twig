{% extends 'base.html.twig' %}

{% block body %}
    {% block javascripts %}
        {{ parent() }}
        <script src="https://code.highcharts.com/stock/highstock.js"></script>
        <script src="https://code.highcharts.com/stock/modules/data.js"></script>
        <script src="https://code.highcharts.com/stock/modules/exporting.js"></script>
        <script src="https://code.highcharts.com/stock/indicators/indicators.js"></script>
        <script src="https://code.highcharts.com/stock/indicators/rsi.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.18.1/moment.min.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/moment-timezone/0.5.13/moment-timezone-with-data-2012-2022.min.js"></script>
        <script>
            Highcharts.setOptions({
                time: {
                    timezone: 'Europe/Madrid'
                }
            });
            Highcharts.getJSON('http://localhost/crypto-tools/public/charts/chart_{{ pair.id }}.json?'+Date.now(), function (data) {

                // create the chart
                Highcharts.stockChart('container', {

                    title: {
                        text: '{{ pair.symbol }}'
                    },

                    xAxis: {
                        range: 5 * 24 * 3600 * 1000 // 1 month
                    },

                    yAxis: [{
                        height: '58%'
                    }, {
                        height: '48%',
                        top: '52%'
                    }],

                    series: [{
                        name: 'AAPL',
                        type: 'candlestick',
                        id: 'candlestick_data',
                        data: data,
                        tooltip: {
                            valueDecimals: 2
                        }
                    }, {
                        type: 'flags',
                        data: [
                            {% for trade in trades %}
                            {
                                x: {{ trade.timestamp }},
                                title: '{% if trade.percentage is defined %} {{ trade.percentage }}% {% else %} BUY{% endif %}',
                                text: '{{ trade.price }} {% if trade.stopLoss_takeProfit is defined and trade.stopLoss_takeProfit %} Stop loss/take profit {% endif %}',
                                color: '{% if trade.percentage is defined %} {% if trade.percentage > 0 %} #00cc44 {% else %} #ff0000 {% endif %} {% else %} #4da6ff {% endif %}',
                            },
                            {% endfor %}
                        ],
                        onSeries: 'candlestick_data',
                        shape: 'squarepin'
                    }, {
                        id: 'indicator_data',
                        yAxis: 1,
                        type: 'rsi',
                        linkedTo: 'candlestick_data',
                        params: {
                            period: 14,
                            overbought: 70,
                            oversold: 30
                        }
                    },
                        {% for trade in trades  %}
                        {% if trade.extra_data.divergence_line is defined %}
                        {
                            type: 'line',
                            data:  [[{{ trade.extra_data.divergence_line.secondPoint.timestamp * 1000 }}, {{ trade.extra_data.divergence_line.secondPoint.price }}],[{{ trade.extra_data.divergence_line.firstPoint.timestamp * 1000 }}, {{ trade.extra_data.divergence_line.firstPoint.price }}]],
                            color: 'green',
                            yAxis: 0,
                        },
                        {
                            type: 'line',
                            data:  [[{{ trade.extra_data.divergence_line.secondPoint.timestamp * 1000 }}, {{ trade.extra_data.divergence_line.secondPoint.value }}],[{{ trade.extra_data.divergence_line.firstPoint.timestamp * 1000 }}, {{ trade.extra_data.divergence_line.firstPoint.value }}]],
                            color: 'green',
                            yAxis: 1,
                        },
                        {% endif %}
                        {% endfor %}
                        {% for trend_line in trend_lines  %}
                        {
                            type: 'line',
                            data:  [[{{ trend_line.startTime * 1000 }}, {{ trend_line.startPrice }}],[{{ trend_line.endTime * 1000 }}, {{ trend_line.endPrice }}]],
                            color: 'green',
                            yAxis: 0,
                        },
                        {% endfor %}
                    ]
                }, function(chart){

                });
            });

        </script>
    {% endblock %}

    <div id="container" style="height: 700px; min-width: 310px"></div>

{% endblock %}